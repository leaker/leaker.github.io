<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 逃避虽然可耻但有用</title><link>https://www.leelib.com/posts.html</link><description>Recent content in Posts on 逃避虽然可耻但有用</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 12 Oct 2022 20:45:05 +0800</lastBuildDate><atom:link href="https://www.leelib.com/posts/atom.xml" rel="self" type="application/rss+xml"/><item><title>基于 Tailwind CSS 的 Box 布局</title><link>https://www.leelib.com/2022/10/12/tailwind-box-layout.html</link><pubDate>Wed, 12 Oct 2022 20:45:05 +0800</pubDate><guid>https://www.leelib.com/2022/10/12/tailwind-box-layout.html</guid><description>Header Content Footer 布局 &amp;lt;!doctype html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34; /&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34; /&amp;gt; &amp;lt;title&amp;gt;Tailwind CSS Box Layout&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.tailwindcss.com&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;style type=&amp;#34;text/tailwindcss&amp;#34;&amp;gt; html, body { font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace; color: #c9d1d9; background-color: #0d1117; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;#34;box&amp;#34; class=&amp;#34;flex flex-col h-screen justify-between&amp;#34;&amp;gt; &amp;lt;header class=&amp;#34;border-b p-5&amp;#34;&amp;gt;Header&amp;lt;/header&amp;gt; &amp;lt;main class=&amp;#34;flex flex-1 flex-col justify-center items-center mb-auto h-auto bg-gray-900&amp;#34;&amp;gt;Content&amp;lt;/main&amp;gt; &amp;lt;footer class=&amp;#34;flex justify-center items-center border-t</description></item><item><title>更新主题为黑色风格</title><link>https://www.leelib.com/2022/10/07/change-blog-theme-dark.html</link><pubDate>Fri, 07 Oct 2022 12:43:36 +0800</pubDate><guid>https://www.leelib.com/2022/10/07/change-blog-theme-dark.html</guid><description>本博客使用博主自制主题： Fika theme for Hugo 我个人本身夜间活动较多，而之前的主题背景颜色偏白，在夜晚的时候偶尔会让我眼睛有被闪瞎的感觉。 遂决定把主题更改</description></item><item><title>使用 Visual Studio 2022 为 python 编译 OpenCV 加 CUDA 支持</title><link>https://www.leelib.com/2022/05/14/vs2022-build-opencv-with-cuda-for-python.html</link><pubDate>Sat, 14 May 2022 09:59:11 +0800</pubDate><guid>https://www.leelib.com/2022/05/14/vs2022-build-opencv-with-cuda-for-python.html</guid><description>准备工作 安装 Scoop 安装 Visual Studio 2022 安装 Ninja v1.11.1 安装 Python v3.10 和 Numpy 安装 wget 和 7zip 安装 Cuda SDK v11.7 一键下载 OpenCV 4.6.0 源码并编译 部署 测试 OpenCV 安装 Scoop 打开 PowerShell 后执行： Set-ExecutionPolicy RemoteSigned -Scope CurrentUser Invoke-WebRequest get.scoop.sh | Invoke-Expression 安装参考</description></item><item><title>博客引擎由Hexo更换为Hugo</title><link>https://www.leelib.com/2022/05/11/change-site-hexo-to-hugo.html</link><pubDate>Wed, 11 May 2022 17:05:12 +0800</pubDate><guid>https://www.leelib.com/2022/05/11/change-site-hexo-to-hugo.html</guid><description>更换原因 Hexo 作为博客引擎长期以来使用还是非常方便的。 但由于其本身是基于nodejs和npm，其中使用到的各种npm库的嵌套依赖关系十分杂乱。有</description></item><item><title>记一些常用的CSS布局方式</title><link>https://www.leelib.com/2021/09/17/css-layout.html</link><pubDate>Fri, 17 Sep 2021 23:22:14 +0800</pubDate><guid>https://www.leelib.com/2021/09/17/css-layout.html</guid><description>内容部分占满页面的剩余高度 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Dock.Full&amp;lt;/title&amp;gt; &amp;lt;style type=&amp;#34;text/css&amp;#34;&amp;gt; html, body, #full { color: #EFEFEF; background-color: #423F3E; margin: 0; padding: 0; height: 100%; } #full { background-color: #171010; display: flex; flex-direction: column; } #someid { background-color: #362222; flex-grow: 1; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;#34;full&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;header&amp;#34;&amp;gt;Dock.Top&amp;lt;/div&amp;gt; &amp;lt;div id=&amp;#34;someid&amp;#34;&amp;gt;Dock.Full&amp;lt;/div&amp;gt;</description></item><item><title>解决用 Scoop 安装的 PowerShellCore 无法在 VSCode Shell 使用</title><link>https://www.leelib.com/2021/03/17/fix-scoop-pwsh-vscode.html</link><pubDate>Wed, 17 Mar 2021 20:21:55 +0800</pubDate><guid>https://www.leelib.com/2021/03/17/fix-scoop-pwsh-vscode.html</guid><description>目前在 Windows 安装软件特别喜欢使用 Scoop 进行管理 使用 Scoop 安装 PowerShell Core 最新版 scoop install pwsh 发现在 VSCode 的 Terminal Shells 列表里面依然看不到新安装的 PowerShell Core 但我又不想使用默认的 PowerShell 或者 cmd 当我</description></item><item><title>卸载 hexo-prism-plugin 代码高亮插件</title><link>https://www.leelib.com/2021/03/12/uninstall-hexo-prism-plugin.html</link><pubDate>Fri, 12 Mar 2021 03:21:50 +0800</pubDate><guid>https://www.leelib.com/2021/03/12/uninstall-hexo-prism-plugin.html</guid><description>最近用 Github 比较频繁，无意间点开 GitHub Pages 的代码库时发现一个大大的 Dependabot alerts 顶在上面 点开后发现最大的一个警告就是这个： 顺着这个 dependencies 一路追查发现是 hexo-prism-plugin 这个插件使用</description></item><item><title>改名“逃避虽然可耻但有用”</title><link>https://www.leelib.com/2020/05/07/change-title-for-icp.html</link><pubDate>Thu, 07 May 2020 22:18:26 +0800</pubDate><guid>https://www.leelib.com/2020/05/07/change-title-for-icp.html</guid><description>突然心血来潮想把自己的笔记用阿里云CDN加速一下，但域名就需要备案。 而我本身的域名不想因为备案就迁回到国内的域名服务商（这里有一段在国内购买</description></item><item><title>解决WSL中使用NTFS分区的权限问题</title><link>https://www.leelib.com/2020/04/30/wsl-ntfs.html</link><pubDate>Thu, 30 Apr 2020 20:32:27 +0800</pubDate><guid>https://www.leelib.com/2020/04/30/wsl-ntfs.html</guid><description>当使用WSL的过程中访问WSL系统以外目录时候出现一些奇奇怪怪问题 通常就是WSL对于NTFS分区的目录权限问题。 使用 mount -l 查看，可能长这样 [root@wsl] mount</description></item><item><title>博客启用 hexo-prism-plugin 代码高亮插件</title><link>https://www.leelib.com/2020/04/28/enable-hexo-prism-plugin.html</link><pubDate>Tue, 28 Apr 2020 19:23:08 +0800</pubDate><guid>https://www.leelib.com/2020/04/28/enable-hexo-prism-plugin.html</guid><description>之前的高亮插件支持的语言比较少，而且效果不是特别理想。特进行了一次修整，内容如下： 由于hexo的更新导致之前的主题出现了一部分显示错误。目前</description></item><item><title>解决 Windows 下部署 RabbitMQ 服务本地授权问题</title><link>https://www.leelib.com/2018/07/07/rabbitmq-server-windows-auth.html</link><pubDate>Sat, 07 Jul 2018 00:13:10 +0800</pubDate><guid>https://www.leelib.com/2018/07/07/rabbitmq-server-windows-auth.html</guid><description>Authentication failed (rejected by the remote node), please check the Erlang cookie 遇到这种情况原因就是本地的授权cookie文件不匹配导致的，结局方法如下： 删除 %UserProfile% 目录下的 .erlang.cookie 文件 使用 C:\Windows\System32\config\systemprofile 目录下的 .erlang.cookie 覆盖掉</description></item><item><title>使用 firewall 配置端口转发</title><link>https://www.leelib.com/2018/03/30/firewall-port-forward.html</link><pubDate>Fri, 30 Mar 2018 16:36:49 +0800</pubDate><guid>https://www.leelib.com/2018/03/30/firewall-port-forward.html</guid><description>开启NAT转发 firewall-cmd --permanent --zone=public --add-masquerade 本机到本机 firewall-cmd --permanent --zone=public --add-forward-port=port=80:proto=tcp:toport=8080 firewall-cmd --permanent --zone=public --add-service=http 本机到其他机器 firewall-cmd --permanent --zone=public --add-forward-port=port=80:proto=tcp:toport=8080:toaddr=192.168.0.2 firewall-cmd --permanent --zone=public --add-port=80/tcp 重新加载应用 firewall-cmd --reload 只允许指定IP连入指定端口 firewall-cmd --permanent --add-rich-rule=&amp;#39;rule family=&amp;#34;ipv4&amp;#34; source address=&amp;#34;192.168.0.2&amp;#34; port protocol=&amp;#34;tcp&amp;#34; port=&amp;#34;80&amp;#34; accept&amp;#39;</description></item><item><title>使用 iptables 配置端口转发</title><link>https://www.leelib.com/2018/03/29/iptables-port-forward.html</link><pubDate>Thu, 29 Mar 2018 16:50:14 +0800</pubDate><guid>https://www.leelib.com/2018/03/29/iptables-port-forward.html</guid><description>配置 sysctl -w net.ipv4.ip_forward=1 # 启用IP转发功能 sysctl -p # 立即生效 echo &amp;#34;net.ipv4.ip_forward=1&amp;#34; &amp;gt;&amp;gt; /usr/lib/sysctl.d/50-default.conf iptables -t nat -A POSTROUTING -j MASQUERADE 添加端口转发脚本 portforward.sh #!/bin/bash # $1=listen port # $2=connect address and port example:111.111.111.111:2222 iptables -t nat -A PREROUTING -p tcp -i eno1 --dport $1 -j DNAT --to $2 想要添加</description></item><item><title>Ubuntu安装最新版本nodejs</title><link>https://www.leelib.com/2018/03/29/ubuntu-install-lastest-nodejs.html</link><pubDate>Thu, 29 Mar 2018 00:49:33 +0800</pubDate><guid>https://www.leelib.com/2018/03/29/ubuntu-install-lastest-nodejs.html</guid><description>最新发行版 sudo curl -sL https://deb.nodesource.com/setup | sudo -E bash - 指定版本，通常用于安装LTS版本。比如当前最新LTS版本是8 sudo curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -</description></item><item><title>使用pkgmgr安装telnet客户端</title><link>https://www.leelib.com/2016/05/09/pkgmgr-install-telnet.html</link><pubDate>Mon, 09 May 2016 11:04:44 +0800</pubDate><guid>https://www.leelib.com/2016/05/09/pkgmgr-install-telnet.html</guid><description>在 Windows Vista 以上的操作系统中可以使用pkgmgr对Windows功能的快捷安装 比如想要安装 telnet客户端 时，只需在控制台里面键入以下命令并回车</description></item><item><title>Eclipse-ADT在Windows下添加library的BUG</title><link>https://www.leelib.com/2016/04/20/adt-add-library-bug.html</link><pubDate>Wed, 20 Apr 2016 18:35:35 +0800</pubDate><guid>https://www.leelib.com/2016/04/20/adt-add-library-bug.html</guid><description>问题出现 今天在Windows里使用 Cocos-Quick 创建的项目在使用ADT往Android里面部署的时候遇到了下面的问题 出现上图的情况是这样的操作步骤： 添加</description></item><item><title>Git的常用命令收集</title><link>https://www.leelib.com/2016/01/21/git.html</link><pubDate>Thu, 21 Jan 2016 23:43:59 +0800</pubDate><guid>https://www.leelib.com/2016/01/21/git.html</guid><description># 拉取最新的代码 git fetch --all # 恢复到最后一次提交，放弃本地所有修改 git reset --hard # 列出所有设置 git config -l # 抛弃对文件的修改 git co -- &amp;lt;filename&amp;gt; # 抛弃对目录的修改 git co . # 从</description></item><item><title>类 enable_shared_from_this 的经验总结</title><link>https://www.leelib.com/2015/12/13/enable-shared-from-this.html</link><pubDate>Sun, 13 Dec 2015 23:32:07 +0800</pubDate><guid>https://www.leelib.com/2015/12/13/enable-shared-from-this.html</guid><description>不能再构造函数内使用 shared_from_this() 函数 class class_a : public std::enable_shared_from_this&amp;lt;class_a&amp;gt; { public: class_a(void) { auto self(shared_from_this());// 这里会报 bad_weak_ptr 错误 } }; 子类无法重复继承 class class_a : public std::enable_shared_from_this&amp;lt;class_a&amp;gt; { }; class class_b : public class_a, public std::enable_shared_from_this&amp;lt;class_a&amp;gt; { }; 这段代码将无法通过编译。 如</description></item><item><title>Win10里添加目录右键菜单 VS2013 Command Prompt Here</title><link>https://www.leelib.com/2015/09/16/vs2013-command-prompt-here.html</link><pubDate>Wed, 16 Sep 2015 04:08:21 +0800</pubDate><guid>https://www.leelib.com/2015/09/16/vs2013-command-prompt-here.html</guid><description>需求 我有时需要在命令行里对某个VS项目目录进行编译或部署等操作，总是需要以下步骤： 打开VS的Command Prompt 进入该项目目录 进行编译操作 个人觉</description></item><item><title>VS2013静态编译openssl批处理</title><link>https://www.leelib.com/2015/09/14/vs2013-build-openssl-static.html</link><pubDate>Mon, 14 Sep 2015 12:26:46 +0800</pubDate><guid>https://www.leelib.com/2015/09/14/vs2013-build-openssl-static.html</guid><description>打开 Visual Studio 2013 Command Prompt wget http://www.nasm.us/pub/nasm/releasebuilds/2.11.08/win32/nasm-2.11.08-win32.zip unzip nasm-2.11.08-win32.zip -d C:/nasm set PATH=%PATH%;C:/nasm/ wget https://www.openssl.org/source/openssl-1.0.2d.tar.gz tar xzf openssl-1.0.2d.tar.gz cd openssl-1.0.2d perl configure VC-WIN32 --prefix=C:/openssl ms\do_nasm nmake -f ms\nt.mak nmake -f ms\nt.mak install echo &amp;#34;build successed.&amp;#34; 这样编译不会产生 error A2070:invalid instruction operands 这个错误</description></item><item><title>好玩的暴雪战网错误提示</title><link>https://www.leelib.com/2015/08/05/fun-battle-net-client-error.html</link><pubDate>Wed, 05 Aug 2015 22:08:24 +0800</pubDate><guid>https://www.leelib.com/2015/08/05/fun-battle-net-client-error.html</guid><description>可能是网络或者其他原因引起的。但没想到暴雪运维竟然卖萌掀桌子 0.0///</description></item><item><title>VS里std::max和max宏混淆问题的解决方案</title><link>https://www.leelib.com/2015/02/09/fix-std-max-error.html</link><pubDate>Mon, 09 Feb 2015 11:27:16 +0800</pubDate><guid>https://www.leelib.com/2015/02/09/fix-std-max-error.html</guid><description>有时,把旧项目转换成新版本项目时,旧版本项目里使用的 max 和 min 宏无法在新版本中正常编译. 原因是: 新版本内有了新的函数 std::max 和 std::min 函数来实现这一功能 这时</description></item><item><title>Windows下的DLL卸载本身模块的方法</title><link>https://www.leelib.com/2015/01/16/windows-dll-freelibrary-self.html</link><pubDate>Fri, 16 Jan 2015 01:35:37 +0800</pubDate><guid>https://www.leelib.com/2015/01/16/windows-dll-freelibrary-self.html</guid><description>在 Windows 里 DLL 卸载自身模块是无法通过字节调用 FreeLibrary 自己来实现的。 原因分析 在当前线程中调用 FreeLibrary 后，当前模块就会立即被释放掉，而当前线程还没有运行结束。所以</description></item><item><title>Linux里面查看登录日志，并统计次数和排序，查看尝试破解密码的IP</title><link>https://www.leelib.com/2015/01/06/linux-auth-log.html</link><pubDate>Tue, 06 Jan 2015 13:42:53 +0800</pubDate><guid>https://www.leelib.com/2015/01/06/linux-auth-log.html</guid><description>仅需一条命令 grep &amp;#34;Failed password for root&amp;#34; /var/log/secure | awk &amp;#39;{print $11}&amp;#39; | sort | uniq -c | sort -nr | more 结果类似下面这样： 4377 103.41.124.18 4368 103.41.124.65 3900 62.210.178.226 2214 103.41.124.33 409 62.210.142.105 404 115.231.222.45 152 122.225.97.91 95 122.225.109.205 81 109.195.69.233 42 74.52.105.154 21 87.106.184.62 21 87.106.1.211 21 82.165.154.23 21 69.64.64.62 21 67.226.156.239 21 61.40.192.52 21 60.213.190.98 21</description></item><item><title>Linux里Git出现fatal: Unable to find remote helper for 'https'的解决方案</title><link>https://www.leelib.com/2014/12/30/linux-git-remote-helper-for-https.html</link><pubDate>Tue, 30 Dec 2014 23:42:43 +0800</pubDate><guid>https://www.leelib.com/2014/12/30/linux-git-remote-helper-for-https.html</guid><description>在Linux内源码编译安装的Git如果出现了 “Unable to find remote helper for &amp;lsquo;https&amp;rsquo;” 错误，则说明编译的时候没有发现系</description></item><item><title>Windows里Git出现fatal: Unable to find remote helper for 'https'的解决方案</title><link>https://www.leelib.com/2014/12/25/git-remote-helper-for-https.html</link><pubDate>Thu, 25 Dec 2014 16:10:02 +0800</pubDate><guid>https://www.leelib.com/2014/12/25/git-remote-helper-for-https.html</guid><description>在升级win8.1之后，重新安装的Git虽然可以正常使用 但遇到https时会报“Unable to find remote helper for &amp;lsquo;https&amp;rsquo;</description></item><item><title>python代码简单加密解密工具</title><link>https://www.leelib.com/2014/11/21/python-simple-crypt-code.html</link><pubDate>Fri, 21 Nov 2014 19:13:45 +0800</pubDate><guid>https://www.leelib.com/2014/11/21/python-simple-crypt-code.html</guid><description>#!/usr/env python &amp;#34;&amp;#34;&amp;#34; :license: MIT Copyright (C) 2012 HustMoon Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &amp;#34;Software&amp;#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,</description></item><item><title>VS2013上直接使用ATL的注意事项</title><link>https://www.leelib.com/2014/11/21/vs2013-use-atl.html</link><pubDate>Fri, 21 Nov 2014 12:15:21 +0800</pubDate><guid>https://www.leelib.com/2014/11/21/vs2013-use-atl.html</guid><description>不再需要导入atl.lib库了，直接包含以下头文件就可以了 #include &amp;lt;atlbase.h&amp;gt; #include &amp;lt;atlcom.h&amp;gt; #include &amp;lt;atlctl.h&amp;gt; 要使用 AtlAxAttachControl 等函数的话，则必须初始化ATL模块 CComModule _Module; _pAtlModule = &amp;amp;_Module;</description></item><item><title>CentOS安装GO编译环境</title><link>https://www.leelib.com/2014/11/01/centos-install-go.html</link><pubDate>Sat, 01 Nov 2014 08:42:17 +0800</pubDate><guid>https://www.leelib.com/2014/11/01/centos-install-go.html</guid><description>我们这里使用源码编译安装，直接按顺序执行下列命令就可以成功(我都是假设已经有root权限的情况下，所以执行之前请确认自己已有root权限)：</description></item><item><title>让CentOS的yum命令可以直接安装最新的nginx</title><link>https://www.leelib.com/2014/10/31/yum-install-last-nginx.html</link><pubDate>Fri, 31 Oct 2014 22:46:53 +0800</pubDate><guid>https://www.leelib.com/2014/10/31/yum-install-last-nginx.html</guid><description>添加nginx的repo echo &amp;#39;[nginx] name=nginx repo baseurl=http://nginx.org/packages/centos/7/x86_64 gpgcheck=0 enabled=1&amp;#39; &amp;gt; /etc/yum.repos.d/nginx.repo 安装 yum update yum install nginx 是不是直接安装了最新版的nginx呢 ( ͡° ͜ʖ ͡°)</description></item><item><title>解决yum安装 openssl-devel时产生的Multilib version problems found错误</title><link>https://www.leelib.com/2014/06/29/fix-yum-openssl-devel-multilib-version-problems-found.html</link><pubDate>Sun, 29 Jun 2014 06:56:31 +0800</pubDate><guid>https://www.leelib.com/2014/06/29/fix-yum-openssl-devel-multilib-version-problems-found.html</guid><description>今天给一台CentOS系统安装openssl-devel时，出现了如下信息： [root@centos]# yum install -y openssl-devel Loaded plugins: fastestmirror, security Repository updates is listed more than once in the configuration Repository centosplus is listed more than once in the configuration Repository contrib is</description></item><item><title>一句话经验</title><link>https://www.leelib.com/2014/04/08/dmesg-tail.html</link><pubDate>Tue, 08 Apr 2014 00:37:23 +0800</pubDate><guid>https://www.leelib.com/2014/04/08/dmesg-tail.html</guid><description>当内核加载失败时，使用以下命令查看出错记录，可以帮助找到问题所在： dmesg | tail -n 30</description></item><item><title>升级Linux内核3.8.10记录</title><link>https://www.leelib.com/2014/04/08/upgrade-linux-kernel-to-3-8-10.html</link><pubDate>Tue, 08 Apr 2014 00:10:19 +0800</pubDate><guid>https://www.leelib.com/2014/04/08/upgrade-linux-kernel-to-3-8-10.html</guid><description>yum install rpmdevtools yum-utils ncurses-devel make rpm-build rpm-devel wget https://www.kernel.org/pub/linux/kernel/v3.x/linux-3.8.10.tar.gz tar xvf linux-3.8.10.tar.gz cd linux-3.8.10 make mrproper # 第一次可忽略 make menuconfig # 记得保存 make make modules_install make install new-kernel-pkg --mkinitrd --depmod --install 3.8.10</description></item><item><title>Alienware系列 COMPAL Embedded System Control 驱动问题解决方案</title><link>https://www.leelib.com/2014/03/30/fix-alienware-compal-embedded-system-control.html</link><pubDate>Sun, 30 Mar 2014 05:05:56 +0800</pubDate><guid>https://www.leelib.com/2014/03/30/fix-alienware-compal-embedded-system-control.html</guid><description>每次重装系统后，装驱动很容易有一个名为“COMPAL Embedded System Control”的驱动未安装。 而使用驱动精灵等驱动智能安装类的软件安装后很容易出现驱</description></item><item><title>在使用boost库时发生 error C4996: 'std::_Copy_impl' 的解决方案</title><link>https://www.leelib.com/2013/11/23/boost-c4996-std-copy-impl.html</link><pubDate>Sat, 23 Nov 2013 13:21:44 +0800</pubDate><guid>https://www.leelib.com/2013/11/23/boost-c4996-std-copy-impl.html</guid><description>原本的程序是控制台的。 但最近需要移植到windows下使用。 所以以MFC来做UI，代码照搬。 一面的一处代码使用了如下语句： boost::split(v, data, boost::is_any_of(_T(&amp;#34;n&amp;#34;))); 结果编译时出</description></item><item><title>Starting httpd: (13)Permission denied: make_sock: could not bind to address 解决方案</title><link>https://www.leelib.com/2013/11/01/httpd-permission-denied-make-sock-could-not-bind-to-address.html</link><pubDate>Fri, 01 Nov 2013 08:36:55 +0800</pubDate><guid>https://www.leelib.com/2013/11/01/httpd-permission-denied-make-sock-could-not-bind-to-address.html</guid><description>原因 修改了conf里面的Listen端口 解决 修改成SELinux安全机制里面默认允许的端口（80, 443, 488, 8008, 8009, 8443）等等。 修改SELinux</description></item><item><title>解决WinRAR压缩包分卷乱序导致无法解压的问题</title><link>https://www.leelib.com/2013/10/30/fix-winrar-order.html</link><pubDate>Wed, 30 Oct 2013 00:24:38 +0800</pubDate><guid>https://www.leelib.com/2013/10/30/fix-winrar-order.html</guid><description>下载游戏：《古墓丽影9》中文免安装绿色豪华硬盘版[1.1.732.1升级档][解压即玩] 光压缩包所有分卷加起来就有快10个G 结果用QQ旋风下</description></item><item><title>让Socket通过HTTP代理通讯</title><link>https://www.leelib.com/2013/10/29/make-socket-proxy.html</link><pubDate>Tue, 29 Oct 2013 16:06:54 +0800</pubDate><guid>https://www.leelib.com/2013/10/29/make-socket-proxy.html</guid><description>如果socket想使用HTTP代理，需要进行下面步骤： connect到代理服务器 send(Format(&amp;ldquo;CONNECT %s:%s HTTP/1.1rnUser-Agent: MyApp/0.1rnrn&amp;rdquo;, &amp;lt;真正目标IP&amp;gt;, &amp;lt;真正目标端口&amp;</description></item><item><title>自己使用过程中使用zlib链接时出的错误总结</title><link>https://www.leelib.com/2013/10/04/use-zlib.html</link><pubDate>Fri, 04 Oct 2013 06:37:29 +0800</pubDate><guid>https://www.leelib.com/2013/10/04/use-zlib.html</guid><description>错误1 error LNK2019: unresolved external symbol _deflateEnd@4 原因1: 未使用zlib的链接库 解决： #pragma comment(lib, &amp;#34;zlibstat.lib&amp;#34;) // for static lib #pragma comment(lib, &amp;#34;zdll.lib&amp;#34;) // for dll lib 原因2：在使用静态库时即使包含了zlibstat.lib没</description></item><item><title>error LNK2026: module unsafe for SAFESEH image 解决方案</title><link>https://www.leelib.com/2013/10/03/error-lnk2026-module-unsafe-for-safeseh-image.html</link><pubDate>Thu, 03 Oct 2013 15:21:16 +0800</pubDate><guid>https://www.leelib.com/2013/10/03/error-lnk2026-module-unsafe-for-safeseh-image.html</guid><description>解决方案 下面两种随便选一种 方法1 去掉项目设置中: Linker -&amp;gt; Advanced -&amp;gt; [Image Has Safe Exception Handlers] = &amp;ldquo;No&amp;rdquo; 方法2 直接在代码中: #pragma comment(linker, &amp;#34;/SAFESEH:NO&amp;#34;)</description></item><item><title>如何用正确的 C 运行时 (CRT) 库链接</title><link>https://www.leelib.com/2013/10/03/how-to-use-crt.html</link><pubDate>Thu, 03 Oct 2013 04:13:52 +0800</pubDate><guid>https://www.leelib.com/2013/10/03/how-to-use-crt.html</guid><description>概要 有六种类型的可重用的库： 静态单线程库 （调试/发行版） 静态多线程的库 （调试/发行版） 动态链接库 (DLL)(Debug/Release) 注意每个库都有一个调试版本和发布版本。 Reusable Library</description></item><item><title>修改连接SSH时的系统语言</title><link>https://www.leelib.com/2013/09/28/modify-ssh-lang.html</link><pubDate>Sat, 28 Sep 2013 05:13:34 +0800</pubDate><guid>https://www.leelib.com/2013/09/28/modify-ssh-lang.html</guid><description>在SSH连接后执行下面命令： export LANG=en_US export LC_ALL=en_US 不过上面的修改只是临时的，仅这一次连接有效。等到下次再连接的时候，又得重新调用。所以可以采用下面永久解决</description></item><item><title>[摘抄笔记]sublime2在Ubuntu下命令安装以及官网压缩包安装</title><link>https://www.leelib.com/2013/09/22/ubuntu-install-sublime2-with-src.html</link><pubDate>Sun, 22 Sep 2013 07:57:24 +0800</pubDate><guid>https://www.leelib.com/2013/09/22/ubuntu-install-sublime2-with-src.html</guid><description>通过终端（terminal）命令安装 sudo add-apt-repository ppa:webupd8team/sublime-text-2 sudo apt-get update sudo apt-get install sublime-text 通过解压官网安装包安装 将下载的tar.bz2文件解压 tar xf Sublime Text 2.0.1 x64.tar.bz2 将解压后的文件夹移动</description></item><item><title>解决在安装了kernel-devel后/lib/modules/$(uname -r)/build 链接失效的问题</title><link>https://www.leelib.com/2013/09/07/fix-kernel-devel.html</link><pubDate>Sat, 07 Sep 2013 12:28:20 +0800</pubDate><guid>https://www.leelib.com/2013/09/07/fix-kernel-devel.html</guid><description>如何安装kernel-devel，可以参考我之前的文章：《Linux下编译驱动发现没有内核源码的解决办法》 下面是我写的一个自动脚本： cd /usr/src/kernels cd $(ls</description></item><item><title>结构体sk_buff在Linux内核2.6.18与2.6.33中的区别</title><link>https://www.leelib.com/2013/09/06/sk-buff-2-6-18-diff-2-6-33.html</link><pubDate>Fri, 06 Sep 2013 17:28:58 +0800</pubDate><guid>https://www.leelib.com/2013/09/06/sk-buff-2-6-18-diff-2-6-33.html</guid><description>在Linux 2.6.33.6中，源文件在：/usr/src/kernels/2.6.33.6/include/linux/skbuff.h struct</description></item><item><title>解决CentOS安装新版本python后，yum不能使用的问题</title><link>https://www.leelib.com/2013/07/26/fix-centos-yum.html</link><pubDate>Fri, 26 Jul 2013 02:42:41 +0800</pubDate><guid>https://www.leelib.com/2013/07/26/fix-centos-yum.html</guid><description>CentOS 上安装新版本 python 请看： 安装python以及解决版本问题 但在安装新版本后，yum不能正常使用了。原因是yum是基于默认的python版本运行的</description></item><item><title>解决编译时出现“gnu/stubs-64.h: No such file or directory”的问题</title><link>https://www.leelib.com/2013/07/10/gnu-stubs-64-h-no-such-file-or-directory.html</link><pubDate>Wed, 10 Jul 2013 10:12:49 +0800</pubDate><guid>https://www.leelib.com/2013/07/10/gnu-stubs-64-h-no-such-file-or-directory.html</guid><description>这个实际上是系统没有安装 glibc 开发包的问题 Ubuntu x64 apt-get install libc6-dev-amd64 CentOS x64 yum install glibc-devel.x86_64</description></item><item><title>如何安装新版本python，以及解决安装了新版python后，默认python依然调用旧版本的问题</title><link>https://www.leelib.com/2013/07/10/fix-python-deff-version.html</link><pubDate>Wed, 10 Jul 2013 06:27:35 +0800</pubDate><guid>https://www.leelib.com/2013/07/10/fix-python-deff-version.html</guid><description>安装新版本python wget http://python.org/ftp/python/2.7.3/Python-2.7.3.tar.bz2 tar xjf Python-2.7.3.tar.bz2 cd Python-2.7.3 ./configure make make atlinstall 这时 python2.7.3 版本已经安装成功了。 但调用 python &amp;ndash;version 依然会显示并使用旧版本 解决办法就是重新建立一个链接并覆盖掉旧</description></item><item><title>python的zlib压缩解压缩对应的C语言方式</title><link>https://www.leelib.com/2013/07/02/python-zlib-trans-c.html</link><pubDate>Tue, 02 Jul 2013 15:47:00 +0800</pubDate><guid>https://www.leelib.com/2013/07/02/python-zlib-trans-c.html</guid><description>压缩 enData = zlib.compress(data)[2:-4] 对应： compress2(dstbuf, &amp;amp;dstLen, strSrc, srcLen, 6); 解压 deData = zlib.decompress(enData, -zlib.MAX_WBITS) 对应： bool gzipInflate( const std::string&amp;amp; compressedBytes, std::string&amp;amp; uncompressedBytes ) { if ( compressedBytes.size() == 0 ) { uncompressedBytes = compressedBytes ; return true ; } uncompressedBytes.clear() ; unsigned full_length = compressedBytes.size() ; unsigned half_length = compressedBytes.size() / 2; unsigned uncompLength = full_length ; char* uncomp = (char*) calloc( sizeof(char),</description></item><item><title>Windows下编译使用zlib库的程序时出现“无法解析的外部符号 _compress”解决方案</title><link>https://www.leelib.com/2013/07/01/windows-use-zlib-link-error.html</link><pubDate>Mon, 01 Jul 2013 05:29:47 +0800</pubDate><guid>https://www.leelib.com/2013/07/01/windows-use-zlib-link-error.html</guid><description>错误描述 error LNK2019: unresolved external symbol _compress referenced 解决方案 在 #include &amp;lt;zlib.h&amp;gt; 之前加上 #define ZLIB_WINAPI #define ZLIB_WINAPI #include &amp;lt;zlib.h&amp;gt;</description></item><item><title>一句话经验zlib</title><link>https://www.leelib.com/2013/06/29/use-zlib-exp.html</link><pubDate>Sat, 29 Jun 2013 04:27:00 +0800</pubDate><guid>https://www.leelib.com/2013/06/29/use-zlib-exp.html</guid><description>Linux使用gcc编译使用zlib库的代码时，使用 -lz 来链接(link) zlib 库。 否则就会出现类似 undefined reference to `deflateInit_&amp;rsquo; 的错误</description></item><item><title>Linux调用tcpdump时“tcpdump: USB link-layer type filtering not implemented”解决方案</title><link>https://www.leelib.com/2013/06/08/tcpdump-error.html</link><pubDate>Sat, 08 Jun 2013 03:00:30 +0800</pubDate><guid>https://www.leelib.com/2013/06/08/tcpdump-error.html</guid><description>当调用tcpdump时，出现错误：tcpdump: USB link-layer type filtering not implemented 原因 说明系统可能有多块网卡共存。 需要指定工作网卡才能开始截包，使用参数举例 [root@centos]# tcpdump</description></item><item><title>gcc迁移到g++出现 inet_addr was not declared in this scope 解决方案</title><link>https://www.leelib.com/2013/06/07/gcc-to-gpp-inet-addr-was-not-declared-in-this-scope.html</link><pubDate>Fri, 07 Jun 2013 14:06:31 +0800</pubDate><guid>https://www.leelib.com/2013/06/07/gcc-to-gpp-inet-addr-was-not-declared-in-this-scope.html</guid><description>错误原因 我手上一个项目本身采用gcc编译。后来因为代码功能需要移植到g++中时，出现了 &amp;ldquo;inet_addr&amp;rdquo; was not declared in this scope 这个错误。 解决方案 // 添加该头文件 #include &amp;lt;arpa/inet.h&amp;gt; 如果</description></item><item><title>Linux下编译驱动发现没有内核源码的解决办法</title><link>https://www.leelib.com/2013/06/02/install-kernel-devel.html</link><pubDate>Sun, 02 Jun 2013 12:25:27 +0800</pubDate><guid>https://www.leelib.com/2013/06/02/install-kernel-devel.html</guid><description>CentOS系统 yum install -y kernel-devel Ubuntu系统 apt-get install linux-source 以上～！ 参考：《或许你不需要整个内核的源代码》 - http://wiki.centos.org/zh/HowTos/I_need_the_Kernel_Source</description></item><item><title>Linux下编译驱动代码时smp_lock.h文件找不到的解决方案</title><link>https://www.leelib.com/2013/06/01/compile-can-not-found-smp-lock-h.html</link><pubDate>Sat, 01 Jun 2013 13:07:20 +0800</pubDate><guid>https://www.leelib.com/2013/06/01/compile-can-not-found-smp-lock-h.html</guid><description>项目中有个驱动代码之前在老版本linux系统中编写的 在移植到 linux-kernel-3.2.0 后，编译时出现一处错误 fatal error: linux/smp_lock.h: No such file or directory 解决办法 将： #include &amp;lt;linux/smp_lock.h&amp;gt; 替换成： #include &amp;lt;linux/hardirq.h&amp;gt;</description></item><item><title>解决VS2012编译的程序在WinXP上运行异常</title><link>https://www.leelib.com/2013/05/29/vs2012-build-app-run-in-winxp-failed.html</link><pubDate>Wed, 29 May 2013 02:50:35 +0800</pubDate><guid>https://www.leelib.com/2013/05/29/vs2012-build-app-run-in-winxp-failed.html</guid><description>在写代码的过程中,我发现使用VS2012编译出来的程序默认支持的系统版本略高 刚发现在 Win7+VS2012 编译出来的程序默认PE信息(Optional Header): Major SubSystem Version =</description></item><item><title>boost的编译与安装</title><link>https://www.leelib.com/2013/05/27/compile-boost.html</link><pubDate>Mon, 27 May 2013 09:31:57 +0800</pubDate><guid>https://www.leelib.com/2013/05/27/compile-boost.html</guid><description>Windows下编译安装 生成bjam bootstrap.bat 编译 bjam --toolset=msvc-11.0 --build-type=complete 安装 bjam --prefix=D:\third_party\boost install Ubuntu仅安装开发包 sudo apt-get install -y libboost-dev libboost-system-dev</description></item><item><title>CentOS系统IP设置</title><link>https://www.leelib.com/2013/05/12/centos-set-ip.html</link><pubDate>Sun, 12 May 2013 05:54:24 +0800</pubDate><guid>https://www.leelib.com/2013/05/12/centos-set-ip.html</guid><description>以最小化安装的CentOS系统默认是不自动设置IP信息的。 我们想要正常访问网络，第一步就必须先把IP设置好。 设置IP为自动获取： [root@centos ~]# dhclient eth0 设置</description></item><item><title>Python执行出现“No module named MySQLdb”解决方案</title><link>https://www.leelib.com/2013/04/05/python-no-module-named-mysqldb.html</link><pubDate>Fri, 05 Apr 2013 14:13:00 +0800</pubDate><guid>https://www.leelib.com/2013/04/05/python-no-module-named-mysqldb.html</guid><description>如果在python程序执行时遇到这个错误提示“No module named MySQLdb” 这个说明缺少对应的库，解决办法是： mix os (easy_install) easy_install mysql-python (mix os) mix os (pip) pip install mysql-python (mix os) Ubuntu apt-get install</description></item><item><title>博客改名“李略帅”</title><link>https://www.leelib.com/2013/03/19/change-blog-title.html</link><pubDate>Tue, 19 Mar 2013 10:35:04 +0800</pubDate><guid>https://www.leelib.com/2013/03/19/change-blog-title.html</guid><description>李略帅 名字肿么样？ 先改了再说，好让搜索引擎方便收集。后面填内容。 以上！</description></item><item><title>让ubuntu 12 desktop版本回归Gnome桌面</title><link>https://www.leelib.com/2013/03/17/back-ubuntu-12-desktop-gnome.html</link><pubDate>Sun, 17 Mar 2013 18:55:21 +0800</pubDate><guid>https://www.leelib.com/2013/03/17/back-ubuntu-12-desktop-gnome.html</guid><description>由于ubuntu 12.04默认采用了Unity界面，对于我这种菜鸟来说用起来很是不顺手，所以搜了一下，发现有办法回归gnome界面。 安装 在此</description></item><item><title>生成不重复的随机数</title><link>https://www.leelib.com/2013/03/15/no-repeat-random-num.html</link><pubDate>Fri, 15 Mar 2013 13:47:47 +0800</pubDate><guid>https://www.leelib.com/2013/03/15/no-repeat-random-num.html</guid><description>下面代码就可以生成1-100区间的随机数： #include &amp;lt;vector&amp;gt; #include &amp;lt;algorithms&amp;gt; std::vector&amp;lt;int&amp;gt; random_numbers; for (unsigned int i = 0; i &amp;lt; 100; ++i) random_numbers.push_back(i + 1); std::random_shuffle(random_numbers.begin(), random_numbers.end());</description></item><item><title>VMware装Win7时网卡驱动问题处理</title><link>https://www.leelib.com/2012/10/21/fix-vmware-win7-no-netcard.html</link><pubDate>Sun, 21 Oct 2012 10:27:59 +0800</pubDate><guid>https://www.leelib.com/2012/10/21/fix-vmware-win7-no-netcard.html</guid><description>用文本编辑器打开虚拟机的vmx文件 例如：Win7.vmx 解决方法是在文本最后加入如下信息： ethernet0.virtualDev = &amp;#34;e1000&amp;#34; 记得要先关闭虚拟机哦！</description></item><item><title>正则表达式一句话经验</title><link>https://www.leelib.com/2012/06/03/use-regex.html</link><pubDate>Sun, 03 Jun 2012 16:00:24 +0800</pubDate><guid>https://www.leelib.com/2012/06/03/use-regex.html</guid><description>在正则表达式里想要匹配多行： ([\s\S]*) 想要匹配到到一定区域内的内容可以考虑非贪婪匹配: 例如想要匹配 “&amp;lt;object name=&amp;lsquo;暗黑</description></item><item><title>解决ubuntu下dante不能正常启动的问题</title><link>https://www.leelib.com/2012/05/24/fix-ubuntu-start-dante-error.html</link><pubDate>Thu, 24 May 2012 06:36:37 +0800</pubDate><guid>https://www.leelib.com/2012/05/24/fix-ubuntu-start-dante-error.html</guid><description>首先查看日志文件 [root@ubuntu]# cat /var/log/danted.log 发现里面有这样的记录 May 24 13:57:52 (1337839072) danted[13596]: socks_seteuid(): old: 0, new: 65534 May 24 13:57:52 (1337839072) danted[13596]: socks_reseteuid(): current: 65534, new: 0 May 24 13:57:52 (1337839072) danted[13596]: fixsettings(): setting the libwrap uid to 0 is not recommended May 24 13:57:52 (1337839072) danted[13596]: symbolfunction(): compiletime configuration error? Failed to open &amp;#34;libc.so&amp;#34;: /usr/lib/i386-linux-gnu/libc.so:</description></item><item><title>使CMake生成工程采用相对路径</title><link>https://www.leelib.com/2012/05/16/cmake-use-relative-path.html</link><pubDate>Wed, 16 May 2012 03:18:15 +0800</pubDate><guid>https://www.leelib.com/2012/05/16/cmake-use-relative-path.html</guid><description>解决方案 在生成项目之前勾选上 CMAKE_USE_RELATIVE_PATHS 这个选项，效果如上图所示。</description></item><item><title>让RedHat系统使用CentOS的yum</title><link>https://www.leelib.com/2012/04/25/redhat-use-centos-yum.html</link><pubDate>Wed, 25 Apr 2012 10:04:10 +0800</pubDate><guid>https://www.leelib.com/2012/04/25/redhat-use-centos-yum.html</guid><description>错误原因 在使用未注册的 RedHat Linux 企业版时。使用yum命令会出现如下提示： [root@localhost ~]# yum install httpd Loaded plugins: rhnplugin, security This system is not registered with RHN. RHN support will be disabled. Setting up Install Process No package httpd available. Nothing to do 解决方案 而</description></item><item><title>汇编中ROL(循环左移)对应的C语言实现</title><link>https://www.leelib.com/2012/04/24/asm-rol-to-c.html</link><pubDate>Tue, 24 Apr 2012 10:48:29 +0800</pubDate><guid>https://www.leelib.com/2012/04/24/asm-rol-to-c.html</guid><description>在汇编语言中，我们可以直接使用ROL ROR等指令进行循环左移和循环右移的操作。 但C语言中却没有对应的操作，没办法只能自己实现了。 下面是我最近</description></item><item><title>将M8导出的联系人XML转化成Andriod可以导入的vcf文件</title><link>https://www.leelib.com/2012/04/12/convert-m8-contacts-xml-to-andriod-vcf.html</link><pubDate>Thu, 12 Apr 2012 09:27:17 +0800</pubDate><guid>https://www.leelib.com/2012/04/12/convert-m8-contacts-xml-to-andriod-vcf.html</guid><description>通过我写的一段Python代码可以让M8用户将联系人导入到Andriod系统中。 操作需要以下步骤： 先用M8PC工具将M8的联系人导出成XML</description></item><item><title>解决Win7下VS2010不保存“最近使用的项目和解决方案”问题</title><link>https://www.leelib.com/2012/04/07/fix-win7-vs2010-no-recents.html</link><pubDate>Sat, 07 Apr 2012 06:39:59 +0800</pubDate><guid>https://www.leelib.com/2012/04/07/fix-win7-vs2010-no-recents.html</guid><description>最近因为一些原因开始使用Win7 x64系统。 而使用VS2010的时候发现文件菜单里面竟然没有 最近使用的项目和解决方案 这一项。 于是网上搜索了半</description></item><item><title>解决编译freeradius出现 cannot find -lperl 的问题</title><link>https://www.leelib.com/2012/03/27/fixed-issue-freeradius-cannot-find-lperl.html</link><pubDate>Tue, 27 Mar 2012 04:30:09 +0800</pubDate><guid>https://www.leelib.com/2012/03/27/fixed-issue-freeradius-cannot-find-lperl.html</guid><description>今天因为项目需要，需要编译freeradius来使用。 错误原因 结果在编译过程中出现如上错误 cannot find -lperl。 解决方案 CentOS sudo yum -y install libtool-perl* Ubuntu sudo apt-get install libperl-dev 做</description></item><item><title>仗剑江湖MUD客户端，最新更新ver 1.0 beta</title><link>https://www.leelib.com/2012/03/22/web-mud-client.html</link><pubDate>Thu, 22 Mar 2012 23:48:35 +0800</pubDate><guid>https://www.leelib.com/2012/03/22/web-mud-client.html</guid><description>为一个元老级的MUD游戏开发的一个PC客户端。利用业余时间完成（主要是这阵子要钻研一个很有技术难度的工作，整天要对着封包一个字节一个字节比对</description></item><item><title>如何使gedit能够编辑和保存到所属root用户的目录中</title><link>https://www.leelib.com/2012/03/20/gedit-saveto-root-dir.html</link><pubDate>Tue, 20 Mar 2012 19:08:43 +0800</pubDate><guid>https://www.leelib.com/2012/03/20/gedit-saveto-root-dir.html</guid><description>解决方案 为了能让gedit能够直接编辑不属于当前用户的文件，我们需要做如下操作： 为gedit创建一个启动器。这个有很多方法，如果不清楚的同学</description></item><item><title>网易的Ubuntu更新源</title><link>https://www.leelib.com/2012/03/19/163-ubuntu-apt-sources.html</link><pubDate>Mon, 19 Mar 2012 13:13:20 +0800</pubDate><guid>https://www.leelib.com/2012/03/19/163-ubuntu-apt-sources.html</guid><description>步骤 sudo gedit /etc/apt/sources.list 编辑你的源列表，将原来的内容全部删除并复制下面列表到文件中，然后保存列表。 sudo apt-get update 等第2步完成之后你就可以打开更新管理器更新了 顺便一</description></item><item><title>一个可以在线生成网站favicon图标的网站</title><link>https://www.leelib.com/2012/03/18/favicon-from-pics.html</link><pubDate>Sun, 18 Mar 2012 20:34:12 +0800</pubDate><guid>https://www.leelib.com/2012/03/18/favicon-from-pics.html</guid><description>一个可以在线生成网站favicon图标的网站 网站地址：http://www.chami.com/html-kit/services/favi</description></item></channel></rss>